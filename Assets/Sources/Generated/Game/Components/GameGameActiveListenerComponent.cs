//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameActiveListenerComponent gameActiveListener { get { return (GameActiveListenerComponent)GetComponent(GameComponentsLookup.GameActiveListener); } }
    public bool hasGameActiveListener { get { return HasComponent(GameComponentsLookup.GameActiveListener); } }

    public void AddGameActiveListener(System.Collections.Generic.List<IGameActiveListener> newValue) {
        var index = GameComponentsLookup.GameActiveListener;
        var component = CreateComponent<GameActiveListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameActiveListener(System.Collections.Generic.List<IGameActiveListener> newValue) {
        var index = GameComponentsLookup.GameActiveListener;
        var component = CreateComponent<GameActiveListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameActiveListener() {
        RemoveComponent(GameComponentsLookup.GameActiveListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameActiveListener;

    public static Entitas.IMatcher<GameEntity> GameActiveListener {
        get {
            if (_matcherGameActiveListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameActiveListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameActiveListener = matcher;
            }

            return _matcherGameActiveListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameActiveListener(IGameActiveListener value) {
        var listeners = hasGameActiveListener
            ? gameActiveListener.value
            : new System.Collections.Generic.List<IGameActiveListener>();
        listeners.Add(value);
        ReplaceGameActiveListener(listeners);
    }

    public void RemoveGameActiveListener(IGameActiveListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameActiveListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameActiveListener();
        } else {
            ReplaceGameActiveListener(listeners);
        }
    }
}
