//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class IOContext {

    public IOEntity soundServiceEntity { get { return GetGroup(IOMatcher.SoundService).GetSingleEntity(); } }
    public SoundServiceComponent soundService { get { return soundServiceEntity.soundService; } }
    public bool hasSoundService { get { return soundServiceEntity != null; } }

    public IOEntity SetSoundService(SoundService newInstance) {
        if (hasSoundService) {
            throw new Entitas.EntitasException("Could not set SoundService!\n" + this + " already has an entity with SoundServiceComponent!",
                "You should check if the context already has a soundServiceEntity before setting it or use context.ReplaceSoundService().");
        }
        var entity = CreateEntity();
        entity.AddSoundService(newInstance);
        return entity;
    }

    public void ReplaceSoundService(SoundService newInstance) {
        var entity = soundServiceEntity;
        if (entity == null) {
            entity = SetSoundService(newInstance);
        } else {
            entity.ReplaceSoundService(newInstance);
        }
    }

    public void RemoveSoundService() {
        soundServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class IOEntity {

    public SoundServiceComponent soundService { get { return (SoundServiceComponent)GetComponent(IOComponentsLookup.SoundService); } }
    public bool hasSoundService { get { return HasComponent(IOComponentsLookup.SoundService); } }

    public void AddSoundService(SoundService newInstance) {
        var index = IOComponentsLookup.SoundService;
        var component = CreateComponent<SoundServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceSoundService(SoundService newInstance) {
        var index = IOComponentsLookup.SoundService;
        var component = CreateComponent<SoundServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveSoundService() {
        RemoveComponent(IOComponentsLookup.SoundService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class IOMatcher {

    static Entitas.IMatcher<IOEntity> _matcherSoundService;

    public static Entitas.IMatcher<IOEntity> SoundService {
        get {
            if (_matcherSoundService == null) {
                var matcher = (Entitas.Matcher<IOEntity>)Entitas.Matcher<IOEntity>.AllOf(IOComponentsLookup.SoundService);
                matcher.componentNames = IOComponentsLookup.componentNames;
                _matcherSoundService = matcher;
            }

            return _matcherSoundService;
        }
    }
}
